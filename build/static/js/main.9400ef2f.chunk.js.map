{"version":3,"sources":["Home.tsx","sidedrawer.js","tour-filter.tsx","tour-modal.tsx","tour-list-view.tsx","map-utils.js","tour-map-view.tsx","tour-panel.tsx","all-tours.tsx","tour-detail.tsx","Signin.tsx","App.tsx","index.tsx"],"names":["Home","className","Carousel","Item","Caption","SideDrawer","Fragment","id","classNames","this","props","isSideDrawerOpen","Navbar","bg","expand","variant","brand","Nav","Button","onClick","ev","closeSideDrawer","children","React","Component","TourFilter","Card","border","Header","Body","Form","Group","controlId","Control","as","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","Subtitle","type","Check","label","TourModal","Modal","size","aria-labelledby","centered","closeButton","Title","header","Footer","onHide","closeText","TourCard","place","Img","src","image","small","name","title","description","Row","Col","starting_point","next_date","stops","max_participants","noGutters","price","emptySymbol","fullSymbol","initialRating","review_score","readonly","no_of_reviews","block","TourCardList","noOfPlaces","places","length","cardDeckSet","i","Math","ceil","k","j","currentCardSet","currentCard","key","push","currentCardDeck","CardDeck","getCardDeckSet","onApiLoad","map","maps","bounds","LatLngBounds","forEach","extend","LatLng","geometry","location","lat","lng","getMapBounds","fitBounds","event","addDomListenerOnce","addDomListener","window","bindResizeListener","require","InfoWindow","style","width","zIndex","height","MapMarker","markerClass","pin","bounce","show","$hover","focused","text","mapInstance","TourCardMap","getPlaceById","parseInt","find","currentPlace","closeAllInfoWindows","show_info","updatePlaces","defocusAllMarkers","repositionMap","activePlace","currentCenter","state","mapParams","center","currentLatLng","google","centerLatLng","neLatLang","ne","swLatLang","sw","overlay","OverlayView","draw","setMap","clickedMarkerPoint","getProjection","fromLatLngToContainerPixel","centerPoint","nePoint","swPoint","xPos","x","yPos","y","isInfoOut","newCenterX","newCenterY","newCenterLatLng","fromContainerPixelToLatLng","panTo","handleActiveMarker","placeId","setState","showPlacesSlider","onChildClickCallback","clickedMarkerProps","handleMapClick","clickedProps","hasActiveInfo","createMapOptions","panControl","mapTypeControl","scrollwheel","zoomControl","styles","stylers","saturation","gamma","lightness","visibility","handleChange","changeProps","handleGoogleApiLoad","handlePlacesSliderClick","newPlaces","console","log","prevProps","prevState","currentActiveInfoState","some","defaultCenter","defaultZoom","bootstrapURLKeys","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","options","onChildClick","onChange","margin","hoverDistance","e","Image","rounded","TourPanel","updatePlaceMarker","handleCardAction","actionType","onMouseEnter","onMouseLeave","alt","AllTours","useState","modalShow","setModalShow","showMap","setShowMap","Array","setPlaces","mapRef","useRef","useEffect","fetch","then","response","json","data","results","result","catch","err","findCollectionById","collection","Container","fluid","checked","Dropdown","Divider","xs","mapParam","mapValue","current","collectionKey","collectionValue","collectionProperty","findAndUpdateCollectionById","ref","TourDetail","Jumbotron","ListGroup","Media","Signin","md","lg","Label","SideDrawerBrand","to","Brand","NoMatch","useLocation","pathname","App","isSideBarOpen","setSideBarState","history","useHistory","deregisterListener","listen","action","fixed","expanded","onToggle","toggleState","Toggle","aria-controls","Collapse","exact","Link","NavDropdown","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9400ef2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Form, Button, Carousel } from \"react-bootstrap\";\r\n\r\n//import Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n  <header className=\"cover\">\r\n    <Carousel>\r\n      <Carousel.Item className=\"custom-carousel-item custom-carousel-item-1\">\r\n        <Carousel.Caption>\r\n          <h3>Experience the unparalleled</h3>\r\n          <p>Explore our widest range of tours.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item className=\"custom-carousel-item custom-carousel-item-2\">\r\n        <Carousel.Caption>\r\n          <h3>Experience the unparalleled</h3>\r\n          <p>Explore our widest range of tours.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item className=\"custom-carousel-item custom-carousel-item-3\">\r\n        <Carousel.Caption>\r\n          <h3>Experience the unparalleled</h3>\r\n          <p>\r\n            Explore our widest range of tours.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  </header>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {Navbar, Nav, Button} from \"react-bootstrap\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./custom.css\";\r\n\r\nexport default class SideDrawer extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"sidebar\" className={classNames({'active': this.props.isSideDrawerOpen})}>\r\n        <Navbar\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        className=\"justify-content-start sideDrawer\"\r\n      >\r\n          {this.props.brand}\r\n          <Nav className=\"ml-auto\">\r\n            <Button \r\n            onClick={(ev) => this.props.closeSideDrawer(ev)}>\r\n              <i className=\"fas fa-window-close\" />\r\n            </Button>\r\n          </Nav>\r\n        </Navbar>\r\n        <Navbar\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        className=\"justify-content-start align-content-start d-flex flex-column\"\r\n      >\r\n        {this.props.children}\r\n      </Navbar>      \r\n        \r\n      </div>\r\n      <div onClick={(ev) => this.props.closeSideDrawer(ev)} className={classNames('overlay',{'active': this.props.isSideDrawerOpen})}/>\r\n     </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\n\r\nconst TourFilter: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card border=\"primary\">\r\n        <article className=\"card-group-item\">\r\n          <Card.Header className=\"custom-card-header\"><h6>Sort By</h6></Card.Header>\r\n          <div className=\"fliter-content\">\r\n            <Card.Body>\r\n              <Form>\r\n                <Form.Group controlId=\"sortBy\">\r\n                  <Form.Control as=\"select\">\r\n                    <option>Price</option>\r\n                    <option>Duration</option>\r\n                    <option>Stops</option>\r\n                    <option>Participants</option>\r\n                    <option>Best Rated</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </div>\r\n        </article>\r\n        <article className=\"card-group-item\">\r\n          <Card.Header className=\"custom-card-header\"><h6>Search By Name</h6></Card.Header>\r\n          <div className=\"fliter-content\">\r\n            <Card.Body>\r\n              <Form>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon2\"><i className=\"fas fa-search\" /></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    placeholder=\"Tour Name\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                </InputGroup>\r\n              </Form>\r\n            </Card.Body>\r\n          </div>\r\n        </article>\r\n        <article className=\"card-group-item\">\r\n          <Card.Header className=\"custom-card-header\"><h6>Filters</h6></Card.Header>\r\n          <div className=\"fliter-content\">\r\n            <Card.Body>\r\n              <Card.Subtitle className=\"mb-3\">Dates: </Card.Subtitle>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Control type=\"text\" placeholder=\"Start After\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Control type=\"text\" placeholder=\"End Before\" />\r\n                </Form.Group>\r\n              </Form>\r\n              <Card.Subtitle className=\"mb-3 mt-3\">Difficulty: </Card.Subtitle>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Difficult\" />\r\n                  <Form.Check type=\"checkbox\" label=\"Moderate\" />\r\n                  <Form.Check type=\"checkbox\" label=\"Easy\" />\r\n                </Form.Group>\r\n              </Form>\r\n              <Card.Subtitle className=\"mb-3 mt-3\">Region: </Card.Subtitle>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Asia\" />\r\n                  <Form.Check type=\"checkbox\" label=\"Europe\" />\r\n                  <Form.Check type=\"checkbox\" label=\"North America\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </div>\r\n        </article>\r\n      </Card>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TourFilter;","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\ntype TourModalProps = {\r\n  onHide: () => void;\r\n  header: React.ElementType | string;\r\n  closeText: string;\r\n  show: boolean;\r\n};\r\n\r\nconst TourModal: React.FC<TourModalProps> = props => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {props.header}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>{props.closeText}</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TourModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, CardDeck, Card, Button } from \"react-bootstrap\";\r\nimport Rating from \"react-rating\";\r\nimport Place from \"./Place\";\r\n\r\nconst TourCard: React.FC<{place: Place}> = ({place}) => {\r\n  return (\r\n    <Card border=\"primary\">\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={place.image.small}\r\n        className=\"tour-card-image\"\r\n      />\r\n      <div className=\"card-image-overlay\">\r\n        <span className=\"tour-card-title-text\">{place.name}</span>\r\n      </div>\r\n      <Card.Body>\r\n        <Card.Subtitle className=\"mb-2\">{place.title}</Card.Subtitle>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          {place.description}\r\n        </Card.Subtitle>\r\n        <Row className=\"mt-3\">\r\n          <Col className=\"tour-pointer\">\r\n            <i className=\"fas fa-map-marker-alt tour-icons\" /><span> {place.starting_point}</span>\r\n          </Col>\r\n          <Col className=\"tour-pointer\">\r\n            <i className=\"fas fa-calendar tour-icons\" /><span> {place.next_date}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"tour-pointer\">\r\n            <i className=\"fas fa-flag tour-icons\" /><span> {place.stops} Stops</span>\r\n          </Col>\r\n          <Col className=\"tour-pointer\">\r\n            <i className=\"fas fa-user tour-icons\" /><span> {place.max_participants} People</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Row noGutters={true}>\r\n          <Col className=\"flex-column\">\r\n            <Col>\r\n              <b>{place.price}</b> per head\r\n            </Col>\r\n            <Col className=\"d-inline text-nowrap\">\r\n              <Rating\r\n                emptySymbol=\"far fa-star tour-icons\"\r\n                fullSymbol=\"fas fa-star tour-icons\"\r\n                initialRating={place.review_score}\r\n                readonly\r\n              />\r\n              <span className=\"text-muted\">&nbsp;{place.no_of_reviews}</span>\r\n            </Col>\r\n          </Col>\r\n          <Col className=\"align-self-center\">\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              block\r\n              className=\"btn-details\"\r\n              type=\"submit\"\r\n            >\r\n              Details\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\ntype TourCardListProps = {\r\n  places: Place[]\r\n}\r\n\r\nconst TourCardList: React.FC<TourCardListProps> = (props) => {\r\n  const getCardDeckSet = (props: TourCardListProps) => {\r\n    const noOfPlaces = props.places.length\r\n    const cardDeckSet = []\r\n    for(let i = 0; i < Math.ceil(noOfPlaces/3) ; i++) {\r\n      let j: number,k: number\r\n      k = j = i*3\r\n      const currentCardSet = []\r\n      while(j < k+3 && j < noOfPlaces){\r\n        const currentCard = <TourCard key={props.places[j].id} place={props.places[j]}/>\r\n        currentCardSet.push(currentCard)\r\n        j++\r\n      }\r\n      const currentCardDeck = (\r\n        <CardDeck className=\"mb-3 mx-3\">\r\n          {[currentCardSet]}\r\n        </CardDeck>\r\n      )\r\n      cardDeckSet.push(currentCardDeck)\r\n    }\r\n    return cardDeckSet\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {getCardDeckSet(props)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TourCardList;\r\n","// Return map bounds based on list of places\r\nconst getMapBounds = (map, maps, places) => {\r\n  const bounds = new maps.LatLngBounds();\r\n\r\n  places.forEach((place) => {\r\n    bounds.extend(new maps.LatLng(\r\n      place.geometry.location.lat,\r\n      place.geometry.location.lng,\r\n    ));\r\n  });\r\n  return bounds;\r\n};\r\n\r\n// Re-center map when resizing the window\r\nconst bindResizeListener = (map, maps, bounds) => {\r\n  maps.event.addDomListenerOnce(map, 'idle', () => {\r\n    maps.event.addDomListener(window, 'resize', () => {\r\n      map.fitBounds(bounds);\r\n    });\r\n  });\r\n};\r\n\r\n// Fit map to its bounds after the api is loaded\r\nexport const onApiLoad = (map, maps, places) => {\r\n  // Get bounds by our places\r\n  const bounds = getMapBounds(map, maps, places);\r\n  // Fit map to bounds\r\n  map.fitBounds(bounds);\r\n  // Bind the resize listener\r\n  bindResizeListener(map, maps, bounds);\r\n};\r\n\r\nexport const isFilled = (array) => array.length > 0","import React from \"react\";\r\nimport { Row, Col, CardDeck, Card, Button, Image } from \"react-bootstrap\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { onApiLoad, isFilled } from \"./map-utils\";\r\nimport Place from \"./Place\";\r\nconst classNames = require(\"classnames\");\r\n\r\ndeclare const google: any;\r\n\r\ntype InfoWindowProps = {\r\n  place: Place;\r\n  mapInstance: any;\r\n};\r\n\r\nconst InfoWindow: React.FC<InfoWindowProps> = ({ place }) => {\r\n  return (\r\n    <Card border=\"primary\" style={{ width: \"274px\", zIndex: 1 }}>\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={place.image.small}\r\n        style={{ height: \"184px\" }}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title className=\"d-flex justify-content-between\">\r\n          <span>{place.name}</span>\r\n          <span>{place.price}</span>\r\n        </Card.Title>\r\n        <Card.Subtitle>{place.title}</Card.Subtitle>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n          <div className=\"tour-pointer\">\r\n            <i className=\"fas fa-map-marker-alt tour-icons\" />\r\n            <span> {place.starting_point}</span>\r\n          </div>\r\n          <div className=\"tour-pointer\">\r\n            <i className=\"fas fa-calendar tour-icons\" />\r\n            <span> {place.next_date}</span>\r\n          </div>\r\n          <div className=\"tour-pointer\">\r\n            <i className=\"fas fa-star tour-icons\" />\r\n            <span> {place.review_score}</span>\r\n          </div>\r\n        </div>\r\n        <Card.Text />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\ntype MapMarkerProps = {\r\n  key: number;\r\n  lat: number;\r\n  lng: number;\r\n  text: string;\r\n  show: boolean;\r\n  place: Place;\r\n  $hover?: boolean;\r\n  focused: boolean;\r\n  mapInstance: any;\r\n};\r\n\r\nconst MapMarker: React.FC<MapMarkerProps> = (props: MapMarkerProps) => {\r\n  const markerClass = classNames({\r\n    pin: true,\r\n    bounce: true,\r\n    \"pin-pressed\": props.show,\r\n    \"pin-over\": props.$hover || props.focused\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <div className={markerClass}>\r\n        <div className=\"pin-text\">{props.text}</div>\r\n      </div>\r\n      <div className=\"pulse\" />\r\n      {props.show && (\r\n        <InfoWindow place={props.place} mapInstance={props.mapInstance} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ntype TourCardMapProps = {\r\n  places: Place[];\r\n  updatePlaces: (places: Place[]) => void;\r\n};\r\n\r\ntype TourCardMapState = {\r\n  mapInstance: any;\r\n  mapParams: any;\r\n  hasActiveInfo: boolean;\r\n  showPlacesSlider: boolean\r\n};\r\n\r\nclass TourCardMap extends React.Component<TourCardMapProps, TourCardMapState> {\r\n  constructor(props: TourCardMapProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mapInstance: null,\r\n      mapParams: null,\r\n      hasActiveInfo: false,\r\n      showPlacesSlider: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Map Mounting start\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps: TourCardMapProps, prevState: TourCardMapState) {\r\n    const { places } = this.props;\r\n    const currentActiveInfoState = places.some((place: Place) => place.map.show_info === true)\r\n    if(currentActiveInfoState !== this.state.hasActiveInfo)\r\n      this.setState({hasActiveInfo: currentActiveInfoState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.defocusAllMarkers()\r\n    this.closeAllInfoWindows()\r\n  }\r\n\r\n  getPlaceById = (id: number | string, places?: Place[]) => {\r\n    id = typeof id === \"string\" ? parseInt(id, 10) : id;\r\n    if(typeof places === 'undefined') {\r\n      places = this.props.places\r\n    }\r\n    return places.find((currentPlace: any) => currentPlace.id === id);\r\n  };\r\n\r\n  closeAllInfoWindows = () => {\r\n    const allProps = { ...this.props };\r\n    const { places } = allProps;\r\n    places.forEach((place: Place) => (place.map.show_info = false));\r\n    this.props.updatePlaces(places);\r\n  };\r\n\r\n  defocusAllMarkers = () => {\r\n    const allProps = { ...this.props };\r\n    const { places } = allProps;\r\n    places.forEach((place: Place) => (place.map.focused = false));\r\n    this.props.updatePlaces(places);\r\n  };\r\n\r\n  repositionMap = (activePlace: Place) => {\r\n    const infoWindowWidth = 274;\r\n    const infoWindowHeight = 306;\r\n    const currentCenter = this.state.mapParams.center;\r\n\r\n    const currentLatLng = new google.maps.LatLng(\r\n      activePlace.geometry.location.lat,\r\n      activePlace.geometry.location.lng\r\n    );\r\n    const centerLatLng = new google.maps.LatLng(\r\n      currentCenter.lat,\r\n      currentCenter.lng\r\n    );\r\n    const neLatLang = new google.maps.LatLng(\r\n      this.state.mapParams.bounds.ne.lat,\r\n      this.state.mapParams.bounds.ne.lng\r\n    );\r\n    const swLatLang = new google.maps.LatLng(\r\n      this.state.mapParams.bounds.sw.lat,\r\n      this.state.mapParams.bounds.sw.lng\r\n    );\r\n\r\n    const overlay = new google.maps.OverlayView();\r\n    overlay.draw = function() {};\r\n    overlay.setMap(this.state.mapInstance);\r\n    const clickedMarkerPoint = overlay\r\n      .getProjection()\r\n      .fromLatLngToContainerPixel(currentLatLng);\r\n    const centerPoint = overlay\r\n      .getProjection()\r\n      .fromLatLngToContainerPixel(centerLatLng);\r\n    const nePoint = overlay\r\n      .getProjection()\r\n      .fromLatLngToContainerPixel(neLatLang);\r\n    const swPoint = overlay\r\n      .getProjection()\r\n      .fromLatLngToContainerPixel(swLatLang);\r\n\r\n    const xPos = infoWindowWidth + clickedMarkerPoint.x;\r\n    const yPos = infoWindowHeight + clickedMarkerPoint.y;\r\n    let isInfoOut = false,\r\n      newCenterX = centerPoint.x,\r\n      newCenterY = centerPoint.y;\r\n\r\n    if (xPos > nePoint.x) {\r\n      isInfoOut = true;\r\n      const shiftX = xPos - nePoint.x;\r\n      newCenterX = newCenterX + shiftX + 10; //buffer;\r\n    }\r\n    if (yPos > swPoint.y) {\r\n      isInfoOut = true;\r\n      const shiftY = yPos - swPoint.y;\r\n      newCenterY = newCenterY + shiftY + 10; //buffer;\r\n    }\r\n    if (isInfoOut) {\r\n      const newCenterLatLng = overlay\r\n        .getProjection()\r\n        .fromContainerPixelToLatLng({ x: newCenterX, y: newCenterY });\r\n      this.state.mapInstance.panTo({\r\n        lat: newCenterLatLng.lat(),\r\n        lng: newCenterLatLng.lng()\r\n      });\r\n    }\r\n  };\r\n  \r\n  handleActiveMarker = (placeId:any) => {      \r\n    const allProps = { ...this.props };\r\n    const { places } = allProps;\r\n    placeId = typeof placeId === \"string\" ? parseInt(placeId, 10) : placeId;\r\n    let activePlace = places.find(\r\n      (currentPlace: any) => currentPlace.id === placeId\r\n    );\r\n    if (typeof activePlace !== \"undefined\") {\r\n      this.setState({showPlacesSlider: false})\r\n      this.closeAllInfoWindows();\r\n      activePlace.map.show_info = !activePlace.map.show_info;\r\n      this.props.updatePlaces(places);\r\n      this.repositionMap(activePlace);\r\n    }\r\n  }\r\n\r\n  // onChildClick callback can take two arguments: key and childProps\r\n  onChildClickCallback = (key: any, clickedMarkerProps: any) => {\r\n    this.handleActiveMarker(key)\r\n  };\r\n\r\n  handleMapClick = (clickedProps: any) => {\r\n    if(!this.state.hasActiveInfo) {\r\n      this.setState((state, props) => {\r\n        return {showPlacesSlider: !state.showPlacesSlider}\r\n      })\r\n    } else {\r\n      this.closeAllInfoWindows();\r\n    }\r\n  };\r\n\r\n  createMapOptions = (maps: any) => {\r\n    return {\r\n      panControl: true,\r\n      mapTypeControl: true,\r\n      scrollwheel: true,\r\n      zoomControl: false,\r\n      styles: [\r\n        {\r\n          stylers: [\r\n            { saturation: -100 },\r\n            { gamma: 0.8 },\r\n            { lightness: 4 },\r\n            { visibility: \"on\" }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  handleChange = (changeProps: any) => {\r\n    this.setState({ mapParams: changeProps });\r\n  };\r\n\r\n  handleGoogleApiLoad = (map: any, maps: any, places: Place[]) => {\r\n    this.setState({ mapInstance: map });\r\n    onApiLoad(map, maps, places);\r\n  };\r\n\r\n  handlePlacesSliderClick = (place: Place) => {\r\n    this.state.mapInstance.panTo({lat: place.geometry.location.lat, lng: place.geometry.location.lng})\r\n    const newPlaces = [...this.props.places]\r\n    newPlaces.forEach((place: Place) => (place.map.focused = false));\r\n    const currentPlace = this.getPlaceById(place.id, newPlaces)\r\n    if(typeof currentPlace !== 'undefined')\r\n      currentPlace.map.focused = true\r\n    this.props.updatePlaces(newPlaces)\r\n  }\r\n\r\n  render() {\r\n    const { places } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"tour-map-container sticky-top\">\r\n        {isFilled(places) && (\r\n          <GoogleMapReact\r\n            defaultCenter={{\r\n              lat: 60.0,\r\n              lng: 30.0\r\n            }}\r\n            defaultZoom={10}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyBZib4Lvp0g1L8eskVBFJ0SEbnENB6cJ-g\" //Env variables\r\n            }}\r\n            yesIWantToUseGoogleMapApiInternals\r\n            onGoogleApiLoaded={({ map, maps }) =>\r\n              this.handleGoogleApiLoad(map, maps, places)\r\n            }\r\n            options={this.createMapOptions}\r\n            onChildClick={this.onChildClickCallback}\r\n            onClick={this.handleMapClick}\r\n            onChange={this.handleChange}\r\n            margin={[]}\r\n            hoverDistance={25}\r\n          >\r\n            {places.map((place: Place) => (\r\n              <MapMarker\r\n                key={place.id}\r\n                lat={place.geometry.location.lat}\r\n                lng={place.geometry.location.lng}\r\n                show={place.map.show_info}\r\n                place={place}\r\n                text={place.price}\r\n                focused={place.map.focused}\r\n                mapInstance={this.state.mapInstance}\r\n              />\r\n            ))}\r\n          </GoogleMapReact>\r\n        )}\r\n      </div>\r\n      {this.state.showPlacesSlider ? \r\n      <div className=\"container-fluid py-2 yest d-lg-none\">\r\n          <div className=\"d-flex flex-row flex-nowrap\">\r\n              {places.map((place: Place) => (\r\n                <div className=\"card tour-bottom-card\"\r\n                onClick={(e) => this.handlePlacesSliderClick(place)}>\r\n                <Row noGutters>\r\n                  <Col>\r\n                    <Image src={place.image.small} height=\"100px\" rounded />\r\n                  </Col>\r\n                  <Col>\r\n                  <Row noGutters className=\"px-2 pt-1\">\r\n                    <div><h6>{place.name}</h6></div>\r\n                  </Row>\r\n                  <Row noGutters className=\"pl-2 flex-column\">\r\n                    <Col className=\"tour-pointer\">\r\n                      <i className=\"fas fa-map-marker-alt tour-icons\" /><span> {place.starting_point}</span>\r\n                    </Col>\r\n                    <Col className=\"tour-pointer\">\r\n                      <i className=\"fas fa-calendar tour-icons\" /><span> {place.next_date}</span>\r\n                    </Col>\r\n                  </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              ))}\r\n          </div>\r\n      </div> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TourCardMap;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport Place from \"./Place\"\r\n\r\ntype TourPanelProps = {\r\n    places: Place[]\r\n    updatePlaceMarker: (placeId: Place[\"id\"], mapParam: keyof Place[\"map\"], mapValue: boolean) => void    \r\n}\r\n\r\nconst TourPanel: React.FC<TourPanelProps> = (props) => {\r\n  const {places, updatePlaceMarker} = props\r\n  const handleCardAction = (actionType: \"mouseEnter\" | \"mouseLeave\" | \"click\", place: Place ) => {\r\n      switch(actionType) {\r\n        case \"mouseEnter\" :\r\n          updatePlaceMarker(place.id, \"focused\", true)\r\n          break;\r\n        case \"mouseLeave\" :\r\n            updatePlaceMarker(place.id, \"focused\", false)\r\n          break;\r\n        case \"click\" :\r\n            updatePlaceMarker(place.id, \"show_info\", true)\r\n            break;\r\n      }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n        {places.map((currentPlace) => {\r\n            return (                        \r\n                <div className=\"card mb-3\" \r\n                onMouseEnter={(e) => handleCardAction(\"mouseEnter\", currentPlace)}\r\n                onMouseLeave={(e) => handleCardAction(\"mouseLeave\", currentPlace)}\r\n                onClick={(e) => handleCardAction(\"click\", currentPlace)}>\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-auto\">\r\n                            <img src={currentPlace.image.small} className=\"img-fluid\" height=\"150px\" width=\"200px\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"card-block px-2\">\r\n                                <h4 className=\"card-title\">{currentPlace.name}</h4>   \r\n                                <p className=\"card-text\">{currentPlace.title}</p>\r\n                                <Row className=\"mt-3\">\r\n                                    <Col className=\"tour-pointer\">\r\n                                        <i className=\"fas fa-map-marker-alt tour-icons\" /><span> {currentPlace.starting_point}</span>\r\n                                    </Col>\r\n                                    <Col className=\"tour-pointer\">\r\n                                        <i className=\"fas fa-calendar tour-icons\" /><span> {currentPlace.next_date}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"tour-pointer\">\r\n                                        <i className=\"fas fa-flag tour-icons\" /><span> {currentPlace.stops} Stops</span>\r\n                                    </Col>\r\n                                    <Col className=\"tour-pointer\">\r\n                                        <i className=\"fas fa-user tour-icons\" /><span> {currentPlace.max_participants} People</span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TourPanel;","import React, { useRef, useState, useEffect, ReactComponentElement, ReactChild } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport TourFilter from \"./tour-filter\";\r\nimport TourModal from \"./tour-modal\"\r\nimport TourCardList from \"./tour-list-view\"\r\nimport TourCardMap from \"./tour-map-view\"\r\nimport TourPanel from \"./tour-panel\"\r\nimport Place from \"./Place\"\r\nconst classNames = require(\"classnames\")\r\n\r\n\r\n\r\nconst AllTours: React.FC = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [places, setPlaces] = useState(new Array<Place>());\r\n\r\n  //Runs only on mount & unmount once because empty dependency array as argument\r\n  const mapRef = useRef<TourCardMap>(null);\r\n  useEffect(() => {\r\n    fetch('places.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.results.forEach((result:Place) => {\r\n          const initMap = {\r\n            show_info: false,\r\n            focused: false\r\n          }\r\n          result.map = initMap\r\n        });\r\n        setPlaces(data.results)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  const findCollectionById = <T, K extends keyof T>(id: React.ReactText, collection: T[]) => {\r\n    id = typeof id === 'string' ? parseInt(id, 10) : id\r\n    return collection.find((currentPlace:any) => currentPlace.id === id);\r\n  }\r\n\r\n  //Generic array of objects update by id method\r\n  const findAndUpdateCollectionById = <T, K extends keyof T>(id: React.ReactText, collection: T[], collectionKey: K, collectionValue: T[K]) => {\r\n    const collectionProperty = findCollectionById(id, collection)\r\n    if(typeof collectionProperty !== 'undefined') {\r\n      collectionProperty[collectionKey] = collectionValue\r\n    }\r\n    return collection\r\n  }\r\n\r\n  const updatePlaces = (places: Place[]) => {\r\n    setPlaces([...places])\r\n  }\r\n\r\n  const updatePlaceMarker = (placeId: Place[\"id\"], mapParam: keyof Place[\"map\"], mapValue: boolean) => {\r\n    let newPlaces = [...places]\r\n    const currentPlace = findCollectionById(placeId, newPlaces)\r\n    if(typeof currentPlace !== 'undefined') {\r\n      if(mapParam === \"show_info\" && currentPlace.map.show_info !== mapValue) {\r\n        if(mapRef && mapRef.current) {\r\n          mapRef.current.handleActiveMarker(placeId)\r\n        }      \r\n      } else if(mapParam === \"focused\") {\r\n        currentPlace.map.focused = mapValue\r\n        setPlaces(findAndUpdateCollectionById(placeId, newPlaces, \"map\", currentPlace.map)) \r\n      }\r\n    }    \r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid className=\"all-tours-title\">\r\n        <Row noGutters className=\"\">\r\n            <div className=\"d-flex my-1 justify-content-between align-items-center align-content-center all-tours-title-block\">\r\n\r\n              <h4 className=\"mr-2 mb-0\">All Tours</h4>\r\n              <div className=\"d-flex align-items-center justify-content-between\">\r\n                { showMap ? \r\n                <Button variant=\"outline-secondary\" className=\"mr-3 header-filter-button\" size=\"sm\" onClick={() => setModalShow(true)}>\r\n                  <span><i className=\"fa fa-filter\"></i> Filters</span>\r\n                </Button> : \r\n                null }\r\n                <Form.Check\r\n                  type=\"switch\"\r\n                  id=\"custom-switch\"\r\n                  label=\"Show Map\"\r\n                  className=\"text-nowrap show-map-toggle\"\r\n                  onChange={() => setShowMap(!showMap)}\r\n                  checked={showMap}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Row>\r\n        <Dropdown.Divider className=\"m-0\"/>\r\n      </Container>\r\n      <Container fluid className=\"all-tours-content\">        \r\n        <Row noGutters className=\"h-100\">\r\n          <Col xs={showMap ? 6 : 2} className=\"d-none d-lg-block\">\r\n            {showMap ? <TourPanel places={places} updatePlaceMarker={updatePlaceMarker}/> : <TourFilter/>}            \r\n          </Col>\r\n          <Col className=\"ml-lg-3\">\r\n            {showMap ? \r\n            <TourCardMap ref={mapRef} places={places} updatePlaces={updatePlaces} /> :\r\n            <TourCardList places={places}/>}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {!showMap ? <div className=\"btn-circle-fab d-lg-none\" onClick={() => setModalShow(true)}><i className=\"fa fa-filter tour-icons\"></i></div> : null}\r\n\r\n      <TourModal show={modalShow} onHide={() => setModalShow(false)}\r\n      closeText=\"Apply\" header=\"Tour Filters\">\r\n        <TourFilter/>\r\n      </TourModal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AllTours;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Form, Button, Jumbotron, ListGroup, Media } from \"react-bootstrap\";\r\n\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst TourDetail: React.FC = () => {\r\n  return (\r\n  <React.Fragment>\r\n   <Container fluid className=\"px-0\">\r\n     <Jumbotron className=\"test-jumbo d-flex justify-content-end align-items-center flex-column\">\r\n        <Row>\r\n          <div className=\"jumbo-image-overlay\">\r\n            <span className=\"jumbo-title-text\">The Culture Explorer</span>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"text-white mt-2 p-1 bg-gradient-dark\">\r\n          <Col className=\"tour-pointer\"><i className=\"far fa-clock\"></i> <span>June, 2021</span> </Col>\r\n          <Col className=\"tour-pointer\"><i className=\"fas fa-map-marker-alt\"></i> <span>Auckland, NZ</span></Col>\r\n        </Row>\r\n     </Jumbotron>    \r\n   </Container>\r\n   <Container>\r\n    <Row>\r\n      <Col className=\"bg-light d-flex-column\">\r\n      <h4 className=\"pt-2 text-primary\">Quick Facts</h4>\r\n      <ListGroup variant=\"flush\" className=\"my-4\">\r\n        <ListGroup.Item className=\"bg-transparent text-nowrap\"><i className=\"fas fa-calendar tour-icons\"></i><b>&nbsp;&nbsp;Next Date&nbsp;&nbsp;</b>June 2021</ListGroup.Item>\r\n        <ListGroup.Item className=\"bg-transparent text-nowrap\"><i className=\"fas fa-chart-line tour-icons\"></i><b>&nbsp;&nbsp;Difficulty&nbsp;&nbsp;</b>Moderate</ListGroup.Item>\r\n        <ListGroup.Item className=\"bg-transparent text-nowrap\"><i className=\"fas fa-user tour-icons\"></i><b>&nbsp;&nbsp;Max Participants&nbsp;&nbsp;</b>15</ListGroup.Item>\r\n        <ListGroup.Item className=\"bg-transparent text-nowrap\"><i className=\"far fa-star tour-icons\"></i><b>&nbsp;&nbsp;Rating&nbsp;&nbsp;</b>4.7/5</ListGroup.Item>\r\n      </ListGroup>\r\n      <h4 className=\"pt-2 text-primary\">Your Tour Guide</h4>\r\n      <Media className=\"align-items-center my-4\">\r\n        <img\r\n          width={48}\r\n          height={48}\r\n          className=\"mr-3 rounded-circle\"\r\n          src=\"https://source.unsplash.com/9UVmlIb0wJU/512x512\"\r\n          alt=\"Generic placeholder\"\r\n        />\r\n        <Media.Body>\r\n          <p className=\"text-nowrap\">\r\n            <b>&nbsp;&nbsp;Lead Guide&nbsp;&nbsp;</b>Rene Williams\r\n          </p>\r\n        </Media.Body>\r\n      </Media>\r\n      <Media className=\"align-items-center my-4\">\r\n        <img\r\n          width={48}\r\n          height={48}\r\n          className=\"mr-3 rounded-circle\"\r\n          src=\"https://source.unsplash.com/VVEwJJRRHgk/512x512\"\r\n          alt=\"Generic placeholder\"\r\n        />\r\n        <Media.Body>\r\n          <p className=\"text-nowrap\">\r\n            <b>&nbsp;&nbsp;Lead Guide&nbsp;&nbsp;</b>Ray Wong\r\n          </p>\r\n        </Media.Body>\r\n      </Media>\r\n      </Col>\r\n      <Col>\r\n        <h4 className=\"pt-2 text-primary\">About the Tour</h4>\r\n        <p>\r\n        Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n        </p>\r\n        <p>\r\n        Irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n   </Container>\r\n  </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TourDetail;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nconst Signin: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid={true}>\r\n        <Row>\r\n          <Col md={4} lg={6} className=\"bg-image\" />\r\n          <Col md={8} lg={6}>\r\n            <div className=\"login d-flex align-items-center py-5\">\r\n              <Container>\r\n                <Row>\r\n                  <Col md={9} lg={8} className=\"mx-auto\">\r\n                    <h3 className=\"login-heading mb-4\">Welcome back!</h3>\r\n                    <Form>\r\n                      <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                          We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember Me\" />\r\n                      </Form.Group>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        block\r\n                        className=\"btn-login text-uppercase font-weight-bold mb-2\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign In\r\n                      </Button>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Home from \"./Home\";\r\nimport SideDrawer from \"./sidedrawer\";\r\nimport AllTours from \"./all-tours\"\r\nimport TourDetail from \"./tour-detail\"\r\nimport Signin from \"./Signin\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\n\r\n\r\nconst SideDrawerBrand: React.FC =() => (\r\n  <LinkContainer to=\"/\">\r\n    <Navbar.Brand>Zours</Navbar.Brand>\r\n  </LinkContainer>\r\n)\r\n\r\nconst NoMatch:React.FC = () => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"no-match\">\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\nconst App: React.FC = () => {\r\n  const [isSideBarOpen, setSideBarState] = useState(false);\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    console.log(\"App Mounted !!\") \r\n    let deregisterListener = history.listen((location, action) => {\r\n      console.log(\"on route change\");\r\n      setSideBarState(false)\r\n    });\r\n    return () => {\r\n      deregisterListener()\r\n    }\r\n  }, [])\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        className=\"justify-content-start\"\r\n        fixed=\"top\"\r\n        expanded={false}\r\n        onToggle={(toggleState: boolean) => {\r\n          console.log(toggleState);\r\n          setSideBarState(true);\r\n        }}\r\n      >\r\n        <Navbar.Toggle className=\"mr-2\" aria-controls=\"basic-navbar-nav\" />\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand>Zours</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <LinkContainer to=\"/\" exact>\r\n              <Nav.Link>Home</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/all-tours\">\r\n              <Nav.Link>Tours</Nav.Link>\r\n            </LinkContainer>\r\n            <NavDropdown title=\"Others\" id=\"basic-nav-dropdown\">\r\n              <LinkContainer to=\"/xyz\">\r\n                <NavDropdown.Item >404</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/tour-detail/100\">\r\n                <NavDropdown.Item >Tour Detail</NavDropdown.Item>\r\n              </LinkContainer>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Nav className=\"ml-auto\">\r\n          <LinkContainer to=\"/login\">\r\n            <Button variant=\"outline-light\">Login</Button>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </Navbar>\r\n      <SideDrawer\r\n        isSideDrawerOpen={isSideBarOpen}\r\n        brand={<SideDrawerBrand/>}\r\n        closeSideDrawer={(ev: any) => setSideBarState(false)}\r\n      >\r\n        <Nav>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/\" exact>\r\n              <Nav.Link>Home</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/all-tours\">\r\n              <Nav.Link>Tours</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/abc\">\r\n              <Nav.Link>404</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/tour-detail/100\">\r\n            <Nav.Link>Tour Detail</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </SideDrawer>\r\n      <div className=\"main\">\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>        \r\n          <Route path=\"/login\">\r\n            <Signin/>\r\n          </Route>\r\n          <Route path=\"/all-tours\">\r\n            <AllTours />\r\n          </Route>\r\n          <Route path=\"/tour-detail/:id\">\r\n            <TourDetail />\r\n          </Route>\r\n          <Route path=\"/*\">\r\n            <NoMatch />\r\n          </Route>\r\n        </Switch>\r\n      </div>      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//import \"./custom.bootstrap.css\"\r\nimport \"./custom.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}